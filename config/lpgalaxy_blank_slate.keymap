/*
 * Copyright (c) 2022 Pete Johanson
 *
 * SPDX-License-Identifier: MIT
 */

#define ZMK_POINTING_DEFAULT_MOVE_VAL 1500

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>

#define QWERTY_BASE 1

// #define TBLE_ORTHO   1
#define TBLE_MIT     1
// #define TBLE_DUAL_2U 1

#define BAS_L 0
#define FNC_L 1
#define NUM_L 2
#define NAV_L 3
#define MOU_L 4

// Using layer taps on thumbs, having quick tap as well helps w/ repeating space/backspace
&lt { quick_tap_ms = <200>; };

#define BT(n) BT_SEL n

/ {
    chosen {
       zmk,physical-layout =
#ifdef TBLE_DUAL_2U
                       &layout_ortho_4x12_2x2u;
#elif defined(TBLE_MIT)
                       &layout_ortho_4x12_1x2u;
#else
                       &layout_ortho_4x12_all1u;
#endif
    };

    macros {
    };

    tap_dances {
    };


    msc {
        time-to-max-speed-ms = <150>;
    };

    cond_layers {
      compatible = "zmk,conditional-layers";
      tri {
        if-layers = <FNC_L NUM_L>;
        then-layer = <NAV_L>;
      };
    };

    keymap {
        compatible = "zmk,keymap";

        base_layer {
            label = "Base";
            bindings = <
 &kp ESC       &kp Q       &kp W      &kp E       &kp R          &kp T          &kp Y            &kp U          &kp I       &kp O      &kp P         &kp BKSP
 &mt LCTL TAB  &kp A       &kp S      &kp D       &kp F          &kp G          &kp H            &kp J          &kp K       &kp L      &kp SEMI      &mt RCTL QUOT
 &kp LSHFT     &kp Z       &kp X      &kp C       &kp V          &kp B          &kp N            &kp M          &kp COMMA   &kp DOT    &kp FSLH      &mt LSHFT RET
 &kp LALT      &kp LGUI    &to BAS_L  &to MOU_L   &mo NUM_L            &kp SPACE                 &mo FNC_L      &kp LEFT    &kp DOWN   &kp UP        &kp RIGHT
            >;
        };

        fnc_layer {
            label = "Fnc";
            bindings = <
 &kp GRAVE  &kp N1     &kp N2     &kp N3       &kp N4          &kp N5         &kp N6           &kp N7         &kp N8      &kp N9       &kp N0      &kp DEL
 &trans     &kp F1     &kp F2     &kp F3       &kp F4          &kp F5         &kp LEFT         &kp DOWN       &kp UP      &kp RIGHT    &kp RET     &kp BSLH
 &trans     &kp F6     &none      &kp K_APP    &kp PSCRN       &none          &kp LC(LA(N))    &kp C_MUTE     &kp C_VOL_DN &kp C_VOL_UP &kp C_PLAY_PAUSE &trans
 &trans     &trans     &trans     &trans       &trans                &trans                    &trans         &kp MINUS   &kp EQUAL     &kp LBKT    &kp RBKT
            >;
        };


        num_layer {
            label = "Num";
            bindings = <
 &kp GRAVE  &kp N1     &kp N2     &kp N3       &kp N4          &kp N5         &kp N6           &kp N7         &kp N8      &kp N9       &kp N0      &trans
 &trans     &trans     &trans     &trans       &trans          &trans         &trans           &kp N4         &kp N5      &kp N6       &trans      &trans
 &trans     &trans     &trans     &trans       &trans          &trans         &kp LC(LA(N))    &kp N1         &kp N2      &kp N3       &trans      &trans
 &trans     &trans     &trans     &trans       &trans                &trans                    &kp N0         &kp MINUS   &kp EQUAL     &kp LBKT    &kp RBKT
            >;
        };

        nav_layer {
            label = "Nav";
            bindings = <
 &trans     &bootloader &bt BT(0)  &bt BT(1)   &bt BT(2)       &bt BT(3)      &bt BT(4)        &bt BT_CLR     &trans      &trans       &trans      &trans
 &trans     &kp F7      &kp F8     &kp F9      &kp F10         &kp F11        &kp HOME         &kp PG_DN      &kp PG_UP   &kp END      &trans      &trans
 &trans     &kp F12     &none      &none       &none           &none          &trans           &trans         &trans      &trans       &trans      &trans
 &trans     &trans      &trans     &trans      &trans               &trans                     &trans         &trans      &trans       &trans      &trans
            >;
        };

        mouse_layer {
            label = "Mouse";
            bindings = <
 &trans     &trans      &trans     &trans      &trans         &trans          &msc SCRL_LEFT   &msc SCRL_DOWN &msc SCRL_UP   &msc SCRL_RIGHT    &mkp MCLK     &trans
 &trans     &trans      &trans     &trans      &trans         &trans          &mmv MOVE_LEFT   &mmv MOVE_DOWN &mmv MOVE_UP   &mmv MOVE_RIGHT    &mkp RCLK     &trans
 &trans     &trans      &trans     &trans      &trans         &trans          &trans           &mkp LCLK      &mkp MB4       &mkp MB5           &kp FSLH      &trans
 &trans     &trans      &trans     &trans      &trans                &trans                    &trans         &trans         &trans             &trans        &trans
            >;
        };
    };
};
